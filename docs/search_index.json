[
["12-survival-analysis.html", "Chapter 12 Survival Analysis ", " Chapter 12 Survival Analysis "],
["12-1-library-used.html", "12.1 Library Used", " 12.1 Library Used library(survival) "],
["12-2-sample-data.html", "12.2 Sample Data", " 12.2 Sample Data main.data = read.csv(&#39;./datasets/surv_maintenance.csv&#39;) str(main.data) ## &#39;data.frame&#39;: 1000 obs. of 7 variables: ## $ lifetime : int 56 81 60 86 34 30 68 65 23 81 ... ## $ broken : int 0 1 0 1 0 0 0 1 0 1 ... ## $ pressureInd : num 92.2 72.1 96.3 94.4 97.8 ... ## $ moistureInd : num 104.2 103.1 77.8 108.5 99.4 ... ## $ temperatureInd: num 96.5 87.3 112.2 72 103.8 ... ## $ team : Factor w/ 3 levels &quot;TeamA&quot;,&quot;TeamB&quot;,..: 1 3 1 3 2 1 2 2 2 3 ... ## $ provider : Factor w/ 4 levels &quot;Provider1&quot;,&quot;Provider2&quot;,..: 4 4 1 2 1 1 2 3 2 4 ... head(main.data) ## lifetime broken pressureInd moistureInd temperatureInd team provider ## 1 56 0 92.17885 104.23020 96.51716 TeamA Provider4 ## 2 81 1 72.07594 103.06570 87.27106 TeamC Provider4 ## 3 60 0 96.27225 77.80138 112.19617 TeamA Provider1 ## 4 86 1 94.40646 108.49361 72.02537 TeamC Provider2 ## 5 34 0 97.75290 99.41349 103.75627 TeamB Provider1 ## 6 30 0 87.67880 115.71226 89.79210 TeamA Provider1 summary(main.data) ## lifetime broken pressureInd moistureInd ## Min. : 1.0 Min. :0.000 Min. : 33.48 Min. : 58.55 ## 1st Qu.:34.0 1st Qu.:0.000 1st Qu.: 85.56 1st Qu.: 92.77 ## Median :60.0 Median :0.000 Median : 97.22 Median : 99.43 ## Mean :55.2 Mean :0.397 Mean : 98.60 Mean : 99.38 ## 3rd Qu.:80.0 3rd Qu.:1.000 3rd Qu.:112.25 3rd Qu.:106.12 ## Max. :93.0 Max. :1.000 Max. :173.28 Max. :128.60 ## temperatureInd team provider ## Min. : 42.28 TeamA:336 Provider1:254 ## 1st Qu.: 87.68 TeamB:356 Provider2:266 ## Median :100.59 TeamC:308 Provider3:242 ## Mean :100.63 Provider4:238 ## 3rd Qu.:113.66 ## Max. :172.54 "],
["12-3-the-code.html", "12.3 The Code", " 12.3 The Code dependantVar = Surv(main.data$lifetime, main.data.train$broken) main.fit = survreg(dependantVar~pressureInd+moistureInd+temperatureInd+team+provider, dist=&quot;gaussian&quot;, data=main.data) summary(main.fit) ## ## Call: ## survreg(formula = dependantVar ~ pressureInd + moistureInd + ## temperatureInd + team + provider, data = main.data, dist = &quot;gaussian&quot;) ## Value Std. Error z p ## (Intercept) 8.04e+01 0.29371 273.574 0.00e+00 ## pressureInd -7.14e-04 0.00122 -0.587 5.57e-01 ## moistureInd 6.01e-03 0.00240 2.505 1.22e-02 ## temperatureInd -1.04e-02 0.00121 -8.593 8.49e-18 ## teamTeamB -5.67e-02 0.05882 -0.964 3.35e-01 ## teamTeamC -6.22e+00 0.06132 -101.392 0.00e+00 ## providerProvider2 1.25e+01 0.06665 187.464 0.00e+00 ## providerProvider3 -1.44e+01 0.06275 -229.241 0.00e+00 ## providerProvider4 7.92e+00 0.07056 112.233 0.00e+00 ## Log(scale) -7.43e-01 0.03540 -20.998 6.86e-98 ## ## Scale= 0.476 ## ## Gaussian distribution ## Loglik(model)= -270.1 Loglik(intercept only)= -1557 ## Chisq= 2573.75 on 8 degrees of freedom, p= 0 ## Number of Newton-Raphson Iterations: 12 ## n= 1000 Use the model to predict lifetime before break (labeled as Ebreak below). Then calculate the remaing lifetime (remaingLT) as predicted lifetime before break - current lifetime. Ebreak = predict(main.fit, data=main.data,type=&#39;quantile&#39;,p=0.5) remainingLT = Ebreak - main.data$lifetime main.data.forecast = data.frame ( lifetime = main.data$lifetime, broken = main.data$broken, Ebreak, remainingLT ) Put all into one data.frame. Sort the remainingLT with lowest first, so that the priority to pay attention to are top to down. head(main.data.forecast[order(main.data.forecast$remainingLT, decreasing = FALSE),]) ## lifetime broken Ebreak remainingLT ## 277 61 1 59.67415 -1.325853 ## 668 60 1 58.83450 -1.165500 ## 619 60 1 58.86275 -1.137253 ## 338 60 1 58.87862 -1.121378 ## 303 60 1 58.88567 -1.114328 ## 557 60 1 58.89501 -1.104994 -->"]
]
